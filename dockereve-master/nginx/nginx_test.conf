user  nginx;
worker_processes  1;

error_log  /var/dockerlog/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}
http {
    server {
        listen 80;
        listen [::]:80 ;
        server_name test.medulina.com testapi.medulina.com;

        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 302 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name test.medulina.com;

        ssl                       on;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        ssl_session_cache         shared:SSL:20m;
        ssl_session_tickets off;
        ssl_session_timeout       10m;

        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:ECDH+3DES:RSA+AES:RSA+3DES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!ADH:!AECDH:!MD5:!DSS:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";

        ssl_stapling              on;
        ssl_stapling_verify       on;
        resolver                  8.8.8.8 8.8.4.4;

        ssl_certificate           /etc/letsencrypt/live/test.medulina.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/test.medulina.com/privkey.pem;
        ssl_trusted_certificate   /etc/letsencrypt/live/test.medulina.com/chain.pem;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        root /www/static;
        location / {
            index index.html;
            include /etc/nginx/mime.types;
        }

        location /.well-known {
        allow all;
        root  /data/letsencrypt/;
        }
    }
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name testapi.medulina.com;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;

        ssl_session_cache         shared:SSL:20m;
        ssl_session_tickets off;
        ssl_session_timeout       10m;

        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:ECDH+3DES:RSA+AES:RSA+3DES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!ADH:!AECDH:!MD5:!DSS:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";

        ssl_stapling              on;
        ssl_stapling_verify       on;
        resolver                  8.8.8.8 8.8.4.4;

        ssl_certificate           /etc/letsencrypt/live/test.medulina.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/test.medulina.com/privkey.pem;
        ssl_trusted_certificate   /etc/letsencrypt/live/test.medulina.com/chain.pem;



        location = /docs/api {
            proxy_pass http://eve:5000/docs/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api {
            proxy_pass http://eve:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size 50M;
        }
        
        location / {
            proxy_pass http://swagger_ui:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /.well-known {
        allow all;
        root  /data/letsencrypt/;
        }
        #return 301 https://$host$request_uri;
    }
}
    
